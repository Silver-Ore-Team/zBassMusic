{
  "config": {
    "lang": [
      "en"
    ],
    "separator": "[\\s\\-]+",
    "pipeline": [
      "stopWordFilter"
    ]
  },
  "docs": [
    {
      "location": "",
      "title": "zBassMusic",
      "text": "<p>zBassMusic is a modern music system for Gothic games based on ZenGin.  It replaces the original DirectMusic system with a custom engine built on top of BASS Library to provide easier workflow for composers and additional functions for the perfect soundtrack design.  The most important features include:</p> <ul> <li>Direct playback of common audio formats (WAV, OGG, MP3) instead of DirectMusic propertiary formats</li> <li>Out-of-the-box support for existing music theme definitions (just change the audio file)</li> <li>Alternative scheduling &amp; transition systems to support smooth crossfades between themes </li> <li>Loading of music files from VDF volumes (DirectMusic required physical files)</li> <li>Scriptable interface for controlling the system from Deadalus scripts</li> <li>Backward compatibility with original <code>.sgt</code> music (it's redirected to the DirectMusic system)</li> </ul> <p>Project Status</p> <p>zBassMusic is still in the development phase and some APIs may be unstable, incomplete or buggy. You can help the project by using the plugin and reporting bugs or proposing ideas for the next features. The current state and plans for the future are on the Roadmap.</p> <ul> <li> <p>: Release Builds</p> <p>Release builds are ready to be used in Gothic and we publish them automatically on our GitHub.</p> <p> Releases</p> </li> <li> <p> Source Code</p> <p>zBassMusic is open source and you can access the code on our public repo hosted by GitHub.</p> <p> GitHub</p> </li> <li> <p> Bug Reporting</p> <p>If you have found a bug in zBassMusic, please create an issue on GitHub and tell us what's wrong.</p> <p> Issues</p> </li> <li> <p> Discussions</p> <p>We listen to ideas for new features, so if something is missing from zBassMusic, let us know and we'll do it.</p> <p> Discussions</p> </li> </ul>"
    },
    {
      "location": "#for-modders",
      "title": "For modders",
      "text": "<p>zBassMusic is designed exclusively for Gothic modders to include it in their mods and it's licensed  under a permissive MIT License, so you can use the plugin for free in any project<sup>1</sup>.  It's built using the new union-api and can be embedded  either as a Union 1.0m plugin or as a completely standalone plugin for base Gothic with System Pack.</p> <p>Check out Getting Started for instructions how to start working with zBassMusic.</p>"
    },
    {
      "location": "#for-players",
      "title": "For players",
      "text": "<p>Unlike most Union plugins, zBassMusic doesn't provide any functions directly for the players who just play base game or some other mod utilizing the original music system. In order to make use of the plugin, you have to actually put your music in the game, so there is no point of installing zBassMusic if you are not making a mod.</p>"
    },
    {
      "location": "#repository",
      "title": "Repository",
      "text": "<p>zBassMusic is an open source project with the source code available on GitHub.</p> <ul> <li>GitHub Repository</li> <li>Release Builds</li> <li>Bug Reporting</li> <li>Discussions</li> </ul>"
    },
    {
      "location": "#authors",
      "title": "Authors",
      "text": "<p>zBassMusic development started in 2023 as an internal plugin for Nek's History to ease the collaboration with our composer<sup>2</sup> who had zero knowledge of DirectMusic Producer workflow and forcing him to learn it would be a complete waste of time and possibly limit the creativity. Sometime later the internal code base based on Union SDK 1.0m was rewritten for union\u2011api \u2014\u00a0the successor of Union SDK, and published as an open source project.</p> <p>The project is maintained under Silver Ore Team modding group by tehe:</p> <ul> <li>Email: piotr.macha@silveroreteam.pl</li> <li>Discord: @tehe.official</li> </ul> <p>The mentionable contributors for the early stage development are Bogu\u015b and Emu who have helped sorting some things up. If you'd like to also help zBassMusic development, check out Developer Guide  and feel free to submit a Pull Request. One accepted merge and you will join the gallery.</p> <p></p> <ol> <li> <p>zBassMusic depends on vendored libraries union-api and gothic-api     licensed under GNU GPL Version 3     and on propertiary licensed BASS Library that's free for non-commercial use only.     Make sure you are not violating these terms while using zBassMusic.\u00a0\u21a9</p> </li> <li> <p>Adam Dzie\u017cyk, composer for Golden Gate, Golden Gate 2, Nek's History and many non-Gothic projects.     Also a reason why zBassMusic exists.\u00a0\u21a9</p> </li> </ol>"
    },
    {
      "location": "configuration/",
      "title": "Configuration",
      "text": ""
    },
    {
      "location": "developer-guide/",
      "title": "Developer Guide",
      "text": ""
    },
    {
      "location": "developer-guide/architecture/",
      "title": "Architecture",
      "text": ""
    },
    {
      "location": "developer-guide/code-style/",
      "title": "Code Style",
      "text": ""
    },
    {
      "location": "developer-guide/contributing/",
      "title": "Contributing",
      "text": ""
    },
    {
      "location": "developer-guide/environment/",
      "title": "Environment",
      "text": ""
    },
    {
      "location": "developer-guide/releases/",
      "title": "Release",
      "text": ""
    },
    {
      "location": "reference/",
      "title": "Reference",
      "text": ""
    },
    {
      "location": "roadmap/",
      "title": "Roadmap",
      "text": ""
    },
    {
      "location": "roadmap/#done",
      "title": "Done",
      "text": ""
    },
    {
      "location": "roadmap/#core-functions",
      "title": "Core functions",
      "text": "<p>Music Engine (v0.1.0)</p> <p>Music engine capable of replacing original DM system in the scope of playing audio and switching songs based on game events.</p> <p>Daedalus API for controlling playback (v0.1.0)</p> <p>External functions to take control over music scheduling in Daedalus scripts. API is stable and shouldn't introduce any breaking changes.</p> <p>Simple crossfade (v0.1.0)</p> <p>Every music theme can opt-in for simple fade-in and fade-out transitions to smoothly crossfade changing themes. The crossfade time is  set globally and the transition starts instantly after receiving an event from the game.</p>"
    },
    {
      "location": "roadmap/#in-progress",
      "title": "In Progress",
      "text": ""
    },
    {
      "location": "roadmap/#transition-scheduler",
      "title": "Transition Scheduler",
      "text": "<p>Transition Scheduler (v0.1.x)</p> <p>Scheduler for executing advanced transitions between songs based on defined rules. The system should be flexible and offer different  transition effects behind an easy-to-use interface. The artist should be able to define rules with high precision (soft goal: &lt;10ms latency).</p> <p>Instant Transition (Done)</p> <p>Default transition starts the effect instantly after receiving an event from the game.</p> <p>OnBeat Transition (Done)</p> <p>Transition accepts a list of time points when the transition can happen and schedules it for the closest point. This way the song may  switch exactly in a moment when the beat ends to match the rhythm.</p> <p>Jingle Transition (To Do)</p> <p>Transition plays an additional short audio during the transition as a one-time jingle. For example, battle music transitioning into  normal can play some theme to emphasize the end of a fight.</p> <p>Format for defining the transition rules (Analysis / Planning)</p> <p>We are still thinking about how can we accept the transition rules from developers. The options to consider are:</p> <ul> <li>Daedalus API (not very ergonomic to pass lots of data)</li> <li>MIDI file (easy to work with for composers because they can do it directly in their DAW)</li> <li>Custom file format (we prefer not to introduce additional custom formats that require custom tooling)</li> </ul> <p>We may choose more than one option. At this moment the best option seems to be MIDI for defining time points + Daedalus API to setup  additional metadata.</p>"
    },
    {
      "location": "roadmap/#future-plans",
      "title": "Future Plans",
      "text": "<p>Complete Product Release (v1.0.0)</p> <p>Before we release version v1.0.0 and mark zBassMusic as a finished product, we need to:</p> <ul> <li>finish all the features in the backlog</li> <li>battle-test the system by having it working in multiple released Gothic mods</li> <li>fix all bugs and crashes that have a meaningful probability of causing Access Violation on players' games</li> </ul>"
    },
    {
      "location": "user-guide/",
      "title": "User Guide",
      "text": ""
    },
    {
      "location": "user-guide/define-music/",
      "title": "Define Music",
      "text": ""
    },
    {
      "location": "user-guide/getting-started/",
      "title": "Getting Started",
      "text": ""
    },
    {
      "location": "user-guide/getting-started/crossfading/",
      "title": "Crossfading",
      "text": ""
    },
    {
      "location": "user-guide/getting-started/music-definition/",
      "title": "Music Definition",
      "text": ""
    },
    {
      "location": "user-guide/getting-started/plugin-loading/",
      "title": "Plugin Loading",
      "text": ""
    },
    {
      "location": "user-guide/scripting/",
      "title": "Scripting (Daedalus)",
      "text": ""
    },
    {
      "location": "user-guide/scripting/custom-scheduler/",
      "title": "Custom Scheduler",
      "text": ""
    },
    {
      "location": "user-guide/transition-scheduler/",
      "title": "Transitions Scheduler",
      "text": ""
    },
    {
      "location": "user-guide/transition-scheduler/instant/",
      "title": "Instant Transition",
      "text": ""
    },
    {
      "location": "user-guide/transition-scheduler/on-beat/",
      "title": "On Beat Transition",
      "text": ""
    }
  ]
}